name: Claude Database Review

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - 'supabase/migrations/**/*.sql'
      - 'supabase/functions/**/*.ts'
      - 'src/lib/supabase.ts'
      - 'src/types/database.ts'
      - 'src/types/database.types.ts'
      - '**/*supabase*.ts'

jobs:
  claude-database-review:
    # Skip for dependabot
    if: github.event.pull_request.user.login != 'dependabot[bot]'
    
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      
      - name: Claude Database Schema Review
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          
          # Database-specific review prompt
          prompt: |
            Review database and Supabase-related changes for the ESYNYC Lesson Search application.
            
            PR Context:
            - PR #${{ github.event.pull_request.number }}
            - Migration Changes: ${{ github.event.pull_request.title }}
            - Author: ${{ github.event.pull_request.user.login }}
            - Files Changed: ${{ github.event.pull_request.changed_files }}
            
            Review focus areas:
            
            ## Migration Safety:
            - Ensure backward compatibility (can rollback if needed)
            - Check for data integrity during migration
            - Verify no data loss scenarios
            - Include DOWN migrations for rollback
            
            ## Performance Critical Areas:
            - Full-text search indexes (tsvector) properly configured
            - Composite indexes for filter combinations
            - Query performance for 831+ lessons
            - Avoid N+1 queries in Edge Functions
            - Connection pooling considerations
            
            ## Security Requirements:
            - Row Level Security (RLS) policies must be enabled
            - Validate all user inputs in Edge Functions
            - SQL injection prevention (use parameterized queries)
            - Proper authentication checks
            - No exposed sensitive data
            
            ## Data Model Considerations:
            - Lesson table must support all 16 filter categories
            - Cultural heritage hierarchy support (parent-child relationships)
            - Ingredient grouping/categorization
            - Efficient storage of array fields (grade levels, themes)
            - Proper foreign key constraints
            
            ## Supabase Specifics:
            - Use Supabase client best practices
            - Handle network errors gracefully
            - Implement proper retry logic
            - Use realtime subscriptions efficiently
            - Edge Function cold start optimization
            
            ## Search Implementation:
            - PostgreSQL full-text search configuration
            - Search across: titles, summaries, ingredients, skills
            - Weighted search results (title > summary > content)
            - Handle special characters and stemming
            
            Please highlight any potential performance bottlenecks or security risks.
            Suggest indexes or query optimizations where appropriate.
          
          # Claude CLI arguments
          # See https://github.com/anthropics/claude-code-action/blob/main/docs/usage.md
          claude_args: |
            --max-turns 5
            --allowed-tools "Bash(npm run test:rls),Bash(gh pr diff -- supabase/migrations),Bash(gh pr comment:*),Read,Grep"